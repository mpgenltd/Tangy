@page "/categories/create"
@page "/categories/edit/{id:int}"

@inject ICategoryRepository _repo
@inject NavigationManager _nav

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>
    <div class="col-12">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="images/loading.gif"/>
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="categories" class="btn btn-secondary">Back To Categories</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    private CategoryDto Category { get; set; } = new();
    private string Title { get; set; } = "Create";
    private bool IsLoading { get; set; } = true;

    [Parameter]
    public int Id { get; set; }

    private async Task UpsertCategory()
    {
        if (Id == 0)
        {
            await _repo.Create(Category);
        }
        else
        {
            await _repo.Update(Category);
        }
        _nav.NavigateTo("categories");
    }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Category = await _repo.Get(Id);
            Title = "Update";
        }
        IsLoading = false;
    }

}